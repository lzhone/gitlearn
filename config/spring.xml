<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
		<!--扫描service层-->
		<context:component-scan base-package="com.angel.serviceimpl"/>
		<!--扫描资源包-->
		<context:property-placeholder location="classpath:db.properties"/>
		<!--配置数据源-->
		<bean name="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		   <property name="driverClassName" value="${jdbc.driverClassName}"/>
		   <property name="url" value="${jdbc.url}"/>
		   <property name="username" value="${jdbc.username}"/>
		    <property name="password" value="${jdbc.password}"/>
		</bean>
		
		<!--配置sqlSessionFactory-->
		<bean name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		    <property name="dataSource" ref="dataSource"/>
		    <property name="typeAliasesPackage" value="com.angel.beans"/>
		    <property name="mapperLocations" value="classpath:/com/angel/beans/*.xml"/>
		</bean>
		
		<!--扫描所有dao生成代理对象并注入到sqlSessionFactory-->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		     <property name="basePackage" value="com.angel.dao"/>
		     <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
		</bean>
		
	    <!--配置事务-->
		<bean name="tx" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		    <property name="dataSource" ref="dataSource"/>
		</bean>
		<tx:annotation-driven transaction-manager="tx"/>
		<!-- jedis 配置 -->  
   <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig" >  
         <property name="maxIdle" value="${redis.maxIdle}" />  
         <property name="maxWaitMillis" value="${redis.maxWait}" />  
         <property name="testOnBorrow" value="${redis.testOnBorrow}" />  
   </bean >  
  <!-- redis服务器中心 -->  
   <bean id="connectionFactory"  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" >  
         <property name="poolConfig" ref="poolConfig" />  
         <property name="port" value="${redis.port}" />  
         <property name="hostName" value="${redis.host}" />  
         <property name="password" value="${redis.password}" />  
         <property name="timeout" value="${redis.timeout}" ></property>  
   </bean >  
   <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >  
         <property name="connectionFactory" ref="connectionFactory" />  
         <property name="keySerializer" >  
             <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
         </property>  
         <property name="valueSerializer" >  
             <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
         </property>  
   </bean >  
     
    <!-- cache配置 -->  
   <bean id="methodCacheInterceptor" class="com.mucfc.msm.common.MethodCacheInterceptor" >  
         <property name="redisUtil" ref="redisUtil" />  
   </bean >  
   <bean id="redisUtil" class="com.mucfc.msm.common.RedisUtil" >  
         <property name="redisTemplate" ref="redisTemplate" />  
   </bean >  
		 <!-- 引入properties配置文件 -->    
 <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
    <property name="locations">  
        <list>  
           <value>classpath:config/*.properties</value>  
            <!--要是有多个配置文件，只需在这里继续添加即可 -->  
        </list>  
    </property>  
</bean>  
</beans>